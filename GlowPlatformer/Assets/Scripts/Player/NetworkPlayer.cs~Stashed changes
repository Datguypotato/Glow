<<<<<<< Updated upstream:GlowPlatformer/Assets/Scripts/Networking/NetworkIdentity.cs
﻿using System.Collections;
using System.Collections.Generic;
using SocketIO;
using UnityEngine;

public class NetworkIdentity : MonoBehaviour
{
    [SerializeField] float m_Speed;

    [Header("Helpfull values    DONT EDIT VALUES")]
    [SerializeField] private string m_ID;
    [SerializeField] private bool m_IsControlling;

    private SocketIOComponent m_Socket;
    // Start is called before the first frame update
    public void Awake()
    {
        m_IsControlling = false;
    }

    public void Move(float x, float y)
    {
        transform.position += new Vector3(x, y, 0) * m_Speed * Time.deltaTime;
    }

    public void SetControllerID(string a_ID)
    {
        m_ID = a_ID;

        m_IsControlling = (NetworkClient.Client_ID == m_ID) ? true : false;
    }

    public void SetSocketRefference(SocketIOComponent a_Socket)
    {
        m_Socket = a_Socket;
    }


    public string GetId()
    {
        return m_ID;
    }


    public bool isControlling()
    {
        return m_IsControlling;
    }

    public SocketIOComponent GetSocket()
    {
        return m_Socket;
    }
}
=======
﻿using System.Collections;
using System.Collections.Generic;
using UnityEngine;

public class NetworkPlayer : BasePlayer
{
    [Header("Helpfull values    DONT EDIT VALUES")]
    [SerializeField] private string m_ID;

    Vector3 joyDir = Vector3.zero;
    [SerializeField] private float m_Speed = 4;

    private void Update()
    {
        rb.AddForce(joyDir);
    }

    public void SetJoyDir(Vector3 a_dir)
    {
        joyDir = a_dir;
    }

    public void SetID(string a_ID)
    {
        m_ID = a_ID;
    }

    public string GetId()
    {
        return m_ID;
    }

    protected override void OnTargetHit(Collision2D collision)
    {
        base.OnTargetHit(collision);

        if (collision.gameObject.GetComponent<BasePlayer>() != null && !collision.gameObject.GetComponent<BasePlayer>().hasCollided)
        {
            BasePlayer lp = collision.gameObject.GetComponent<BasePlayer>();
            Vector3 collPoint = (transform.position + lp.transform.position) / 2;
            hasCollided = true;

            NetworkPlayerManager.instance.StartRespawn(this, lp, collPoint);
            MusicManager.instance.PlayNote();
        }
    }
}
>>>>>>> Stashed changes:GlowPlatformer/Assets/Scripts/Player/NetworkPlayer.cs
